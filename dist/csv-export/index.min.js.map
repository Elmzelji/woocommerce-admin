{"version":3,"sources":["webpack://wc.[modulename]/webpack/bootstrap","webpack://wc.[modulename]/./packages/csv-export/src/index.js","webpack://wc.[modulename]/external \"moment\""],"names":["stringValue","value","Array","escapeCSVValue","header","undefined","rowItem","getCSVHeaders","getCSVRows","text","name","params","fileNameSections","moment","key","decodeURIComponent","blob","type","saveAs"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAGA;AACA;;AAEA,+BAAiC;AAChC,MAAIA,WAAW,GAAGC,KAAK,CADS,QACdA,EAAlB,CADgC,CAGhC;AACA;AACA;;AACA,MAAK,8BAAiCD,WAAW,CAAXA,OAAtC,CAAsCA,CAAjC,CAAL,EAAkE;AACjEA,eAAW,GAAG,MAAdA;AADD,SAEO,IAAKA,WAAW,CAAXA,MAAL,QAAKA,CAAL,EAAqC;AAC3CA,eAAW,GAAG,MAAMA,WAAW,CAAXA,cAAN,IAAMA,CAAN,GAAdA;AACA;;AAED;AACA;;AAED,gCAAkC;AACjC,SAAOE,KAAK,CAALA,mBACJ,OAAO,CAAP,IACM;AAAA,WAAcC,cAAc,CAAEC,MAAM,CAApC,KAA4B,CAA5B;AADN,UADIF,GACJ,CADIA,GAAP;AAKA;;AAED,0BAA4B;AAC3B,SAAOA,KAAK,CAALA,gBACJ,IAAI,CAAJ,IACM;AAAA,WACL,GAAG,CAAH,IACO,mBAAe;AACpB,UACCG,SAAS,KAAKC,OAAO,CAArBD,SACAC,OAAO,CAAPA,UAFD,MAGE;AACD;AACA;;AAED,aAAOH,cAAc,CAAEG,OAAO,CAA9B,KAAqB,CAArB;AATF,YADK,GACL,CADK;AADN,UADIJ,IACJ,CADIA,GAAP;AAkBA;AAED;;;;;;;;;AAOO,iDAAmD;AACzD,SAAO,CAAEK,aAAa,CAAf,OAAe,CAAf,EAA4BC,UAAU,CAAtC,IAAsC,CAAtC,SACG;AAAA,WAAYC,IAAI,CAAhB;AADH,UAAP,IAAO,CAAP;AAGA;AAED;;;;;;;;;AAQO,+BAAuD;AAAA,MAAzBC,IAAyB,uEAAlB,EAAkB;AAAA,MAAdC,MAAc,uEAAL,EAAK;AAC7D,MAAMC,gBAAgB,GAAG,CACxBF,IAAI,CAAJA,oCADwB,GACxBA,CADwB,EAExBG,6CAAM,GAANA,OAFwB,YAExBA,CAFwB,EAGxB,MAAM,CAAN,iBAEE;AAAA,WACCC,GAAG,CAAHA,iDAEAC,kBAAkB,CAAEJ,MAAM,CAA1BI,GAA0B,CAAR,CAAlBA,qCAHD,GAGCA,CAHD;AAFF,UAHwB,GAGxB,CAHwB,SAaf;AAAA,WAAYN,IAAI,CAAhB;AAbV,GAAyB,CAAzB;AAeA,SAAOG,gBAAgB,CAAhBA,YAAP;AACA;AAED;;;;;;;AAMO,4CAA8C;AACpD;AACA,MAAMI,IAAI,GAAG,SAAU,CAAV,OAAU,CAAV,EAAuB;AAAEC,QAAI,EAAE;AAAR,GAAvB,CAAb;AAEAC,kEAAM,OAANA,QAAM,CAANA;AACA,C;;;;;;;;;;;ACrGD,aAAa,iCAAiC,EAAE,I","file":"csv-export/index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/csv-export/build-module/index.js\");\n","/**\n * External dependencies\n */\nimport moment from 'moment';\nimport { saveAs } from 'browser-filesaver';\n\nfunction escapeCSVValue( value ) {\n\tlet stringValue = value.toString();\n\n\t// Prevent CSV injection.\n\t// See: http://www.contextis.com/resources/blog/comma-separated-vulnerabilities/\n\t// See: WC_CSV_Exporter::escape_data()\n\tif ( [ '=', '+', '-', '@' ].includes( stringValue.charAt( 0 ) ) ) {\n\t\tstringValue = \"'\" + stringValue;\n\t} else if ( stringValue.match( /[,\"\\s]/ ) ) {\n\t\tstringValue = '\"' + stringValue.replace( /\"/g, '\"\"' ) + '\"';\n\t}\n\n\treturn stringValue;\n}\n\nfunction getCSVHeaders( headers ) {\n\treturn Array.isArray( headers )\n\t\t? headers\n\t\t\t\t.map( ( header ) => escapeCSVValue( header.label ) )\n\t\t\t\t.join( ',' )\n\t\t: [];\n}\n\nfunction getCSVRows( rows ) {\n\treturn Array.isArray( rows )\n\t\t? rows\n\t\t\t\t.map( ( row ) =>\n\t\t\t\t\trow\n\t\t\t\t\t\t.map( ( rowItem ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tundefined === rowItem.value ||\n\t\t\t\t\t\t\t\trowItem.value === null\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn escapeCSVValue( rowItem.value );\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.join( ',' )\n\t\t\t\t)\n\t\t\t\t.join( '\\n' )\n\t\t: [];\n}\n\n/**\n * Generates a CSV string from table contents\n *\n * @param   {Array.<Object>}        headers    Object with table header information\n * @param   {Array.Array.<Object>}  rows       Object with table rows information\n * @return {string}                           Table contents in a CSV format\n */\nexport function generateCSVDataFromTable( headers, rows ) {\n\treturn [ getCSVHeaders( headers ), getCSVRows( rows ) ]\n\t\t.filter( ( text ) => text.length )\n\t\t.join( '\\n' );\n}\n\n/**\n * Generates a file name for CSV files based on the provided name, the current date\n * and the provided params, which are all appended with hyphens.\n *\n * @param   {string}  [name='']     Name of the file\n * @param   {Object}  [params={}]   Object of key-values to append to the file name\n * @return {string}                Formatted file name\n */\nexport function generateCSVFileName( name = '', params = {} ) {\n\tconst fileNameSections = [\n\t\tname.toLowerCase().replace( /[^a-z0-9]/g, '-' ),\n\t\tmoment().format( 'YYYY-MM-DD' ),\n\t\tObject.keys( params )\n\t\t\t.map(\n\t\t\t\t( key ) =>\n\t\t\t\t\tkey.toLowerCase().replace( /[^a-z0-9]/g, '-' ) +\n\t\t\t\t\t'-' +\n\t\t\t\t\tdecodeURIComponent( params[ key ] )\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.replace( /[^a-z0-9]/g, '-' )\n\t\t\t)\n\t\t\t.join( '_' ),\n\t].filter( ( text ) => text.length );\n\n\treturn fileNameSections.join( '_' ) + '.csv';\n}\n\n/**\n * Downloads a CSV file with the given file name and contents\n *\n * @param   {string}  fileName     Name of the file to download\n * @param   {string}  content      Contents of the file to download\n */\nexport function downloadCSVFile( fileName, content ) {\n\t// eslint-disable-next-line no-undef\n\tconst blob = new Blob( [ content ], { type: 'text/csv;charset=utf-8' } );\n\n\tsaveAs( blob, fileName );\n}\n","(function() { module.exports = this[\"moment\"]; }());"],"sourceRoot":""}