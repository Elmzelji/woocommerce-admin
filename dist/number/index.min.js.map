{"version":3,"sources":["webpack://wc.[modulename]/webpack/bootstrap","webpack://wc.[modulename]/./packages/number/src/index.js"],"names":["numberFormatter","require","precision","decimalSeparator","thousandSeparator","number","parseFloat","isNaN","parsedPrecision","parseInt","decimals","Number","Math","numberFormat","secondaryValue","primaryValue"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,IAAMA,eAAe,GAAGC,mBAAO,CAA/B,8FAA+B,CAA/B;AAEA;;;;;;;;;;AAQO,oCAGL;AAAA,4BAFCC,SAED;AAAA,MAFCA,SAED,+BAFa,IAEb;AAAA,mCAFmBC,gBAEnB;AAAA,MAFmBA,gBAEnB,sCAFsC,GAEtC;AAAA,mCAF2CC,iBAE3C;AAAA,MAF2CA,iBAE3C,sCAF+D,GAE/D;;AACD,MAAK,kBAAL,UAAkC;AACjCC,UAAM,GAAGC,UAAU,CAAnBD,MAAmB,CAAnBA;AACA;;AAED,MAAKE,KAAK,CAAV,MAAU,CAAV,EAAuB;AACtB;AACA;;AAED,MAAIC,eAAe,GAAGC,QAAQ,YAA9B,EAA8B,CAA9B;;AAEA,MAAKF,KAAK,CAAV,eAAU,CAAV,EAAgC;AAAA,gCACRF,MAAM,CAANA,iBADQ,GACRA,CADQ;AAAA;AAAA,QACrBK,QADqB;;AAE/BF,mBAAe,GAAGE,QAAQ,GAAGA,QAAQ,CAAX,SAA1BF;AACA;;AAED,SAAOR,eAAe,4CAAtB,iBAAsB,CAAtB;AAMA;AAED;;;;;;;;;AAQO,gDAAkD;AACxD,MAAK,CAAEW,MAAM,CAANA,SAAP,KAAOA,CAAP,EAAkC;AACjC;AACA;;AAED;AACC;AACC,aAAOC,IAAI,CAAJA,MAAP,KAAOA,CAAP;;AACD;AACC,aAAOC,YAAY;AAAqBX,iBAAS,EAAE;AAAhC,UAAnB,KAAmB,CAAnB;AAJF;AAMA;AAED;;;;;;;;AAOO,sDAAwD;AAC9D,MACC,CAAES,MAAM,CAANA,SAAF,YAAEA,CAAF,IACA,CAAEA,MAAM,CAANA,SAFH,cAEGA,CAFH,EAGE;AACD;AACA;;AAED,MAAKG,cAAc,KAAnB,GAA4B;AAC3B;AACA;;AAED,SAAOF,IAAI,CAAJA,MACJ,CAAEG,YAAY,GAAd,kBAAF,cAAE,GADH,GAAOH,CAAP;AAGA,C","file":"number/index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/number/build-module/index.js\");\n","const numberFormatter = require( 'locutus/php/strings/number_format' );\n\n/**\n * Formats a number using site's current locale\n *\n * @see http://locutus.io/php/strings/number_format/\n * @param {Object} numberConfig number formatting configuration object.\n * @param {number|string} number number to format\n * @return {?string} A formatted string.\n */\nexport function numberFormat(\n\t{ precision = null, decimalSeparator = '.', thousandSeparator = ',' },\n\tnumber\n) {\n\tif ( typeof number !== 'number' ) {\n\t\tnumber = parseFloat( number );\n\t}\n\n\tif ( isNaN( number ) ) {\n\t\treturn '';\n\t}\n\n\tlet parsedPrecision = parseInt( precision, 10 );\n\n\tif ( isNaN( parsedPrecision ) ) {\n\t\tconst [ , decimals ] = number.toString().split( '.' );\n\t\tparsedPrecision = decimals ? decimals.length : 0;\n\t}\n\n\treturn numberFormatter(\n\t\tnumber,\n\t\tparsedPrecision,\n\t\tdecimalSeparator,\n\t\tthousandSeparator\n\t);\n}\n\n/**\n * Formats a number string based on type of `average` or `number`.\n *\n * @param {Object} numberConfig number formatting configuration object.\n * @param {string} type of number to format, average or number\n * @param {number} value to format.\n * @return {?string} A formatted string.\n */\nexport function formatValue( numberConfig, type, value ) {\n\tif ( ! Number.isFinite( value ) ) {\n\t\treturn null;\n\t}\n\n\tswitch ( type ) {\n\t\tcase 'average':\n\t\t\treturn Math.round( value );\n\t\tcase 'number':\n\t\t\treturn numberFormat( { ...numberConfig, precision: null }, value );\n\t}\n}\n\n/**\n * Calculates the delta/percentage change between two numbers.\n *\n * @param {number} primaryValue the value to calculate change for.\n * @param {number} secondaryValue the baseline which to calculdate the change against.\n * @return {?number} Percent change between the primaryValue from the secondaryValue.\n */\nexport function calculateDelta( primaryValue, secondaryValue ) {\n\tif (\n\t\t! Number.isFinite( primaryValue ) ||\n\t\t! Number.isFinite( secondaryValue )\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( secondaryValue === 0 ) {\n\t\treturn 0;\n\t}\n\n\treturn Math.round(\n\t\t( ( primaryValue - secondaryValue ) / secondaryValue ) * 100\n\t);\n}\n"],"sourceRoot":""}